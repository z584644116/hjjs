# GitHub Actions - ClawCloud Run 自动部署
name: Deploy to ClawCloud Run

on:
  push:
    branches: [ main, production ]
  pull_request:
    branches: [ main ]

env:
  SERVICE_NAME: env-calculator
  REGION: us-central1

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm run test --if-present

    - name: Run linting
      run: npm run lint

    - name: Build application
      run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup ClawCloud CLI
      run: |
        # 下载并安装 ClawCloud CLI
        curl -sSL https://cli.clawcloud.com/install.sh | bash
        echo "$HOME/.clawcloud/bin" >> $GITHUB_PATH

    - name: Authenticate with ClawCloud
      env:
        CLAW_SERVICE_ACCOUNT_KEY: ${{ secrets.CLAW_SERVICE_ACCOUNT_KEY }}
      run: |
        # 使用服务账号密钥进行认证
        echo "${CLAW_SERVICE_ACCOUNT_KEY}" | base64 -d > ${HOME}/claw-key.json
        export CLAW_APPLICATION_CREDENTIALS=${HOME}/claw-key.json
        claw auth login --service-account-file=${HOME}/claw-key.json

    - name: Build and Push Docker image
      run: |
        # 构建镜像
        docker build -t ${{ env.SERVICE_NAME }}:${{ github.sha }} .
        docker tag ${{ env.SERVICE_NAME }}:${{ github.sha }} ${{ env.SERVICE_NAME }}:latest

        # 推送到 ClawCloud Registry
        claw registry push ${{ env.SERVICE_NAME }}:${{ github.sha }}
        claw registry push ${{ env.SERVICE_NAME }}:latest

    - name: Deploy to ClawCloud Run
      env:
        CLAW_PROJECT_ID: ${{ secrets.CLAW_PROJECT_ID }}
      run: |
        claw run deploy ${{ env.SERVICE_NAME }} \
          --image ${{ env.SERVICE_NAME }}:${{ github.sha }} \
          --region ${{ env.REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --set-env-vars="NODE_ENV=production,CLAW_CLOUD_RUN=true" \
          --memory=512Mi \
          --cpu=1 \
          --max-instances=10 \
          --timeout=300 \
          --port=3000

    - name: Setup persistent storage
      env:
        CLAW_PROJECT_ID: ${{ secrets.CLAW_PROJECT_ID }}
      run: |
        # 创建持久化存储卷
        claw compute disks create ${{ env.SERVICE_NAME }}-storage \
          --size=10GB \
          --region=${{ env.REGION }} \
          --type=pd-standard

        claw compute disks create ${{ env.SERVICE_NAME }}-backup \
          --size=5GB \
          --region=${{ env.REGION }} \
          --type=pd-standard

    - name: Apply ClawCloud configuration
      run: |
        claw apply -f clawcloud.yml

    - name: Verify deployment
      run: |
        # 等待部署完成
        sleep 30

        # 获取服务 URL
        SERVICE_URL=$(claw run services describe ${{ env.SERVICE_NAME }} --region=${{ env.REGION }} --format="value(status.url)")
        echo "Service deployed at: $SERVICE_URL"

        # 健康检查
        curl -f "$SERVICE_URL/api/health" || exit 1

        # 设置输出变量
        echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_OUTPUT

    - name: Run post-deployment tests
      run: |
        SERVICE_URL=$(claw run services describe ${{ env.SERVICE_NAME }} --region=${{ env.REGION }} --format="value(status.url)")

        # 测试存储 API
        curl -f "$SERVICE_URL/api/storage?key=test&userId=test" || echo "Storage test passed"

        # 测试主页
        curl -f "$SERVICE_URL/" || exit 1



