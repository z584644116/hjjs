# 通用部署工作流 - 适配不同的云平台
name: Deploy to Cloud Platform

on:
  push:
    branches: [ main, production ]
  pull_request:
    branches: [ main ]

env:
  SERVICE_NAME: env-calculator
  DOCKER_IMAGE: env-calculator

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Build application
      run: npm run build

    - name: Test storage functionality
      run: |
        # 启动应用进行测试
        npm run dev &
        APP_PID=$!
        
        # 等待应用启动
        sleep 10
        
        # 运行存储测试
        npm run test:storage
        
        # 清理
        kill $APP_PID

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: |
          ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          ${{ env.DOCKER_IMAGE }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Save Docker image
      run: |
        docker save ${{ env.DOCKER_IMAGE }}:${{ github.sha }} > /tmp/docker-image.tar

    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: /tmp/docker-image.tar
        retention-days: 1

  deploy-clawcloud:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download Docker image artifact
      uses: actions/download-artifact@v4
      with:
        name: docker-image
        path: /tmp

    - name: Load Docker image
      run: |
        docker load < /tmp/docker-image.tar

    - name: Deploy to ClawCloud
      env:
        CLAW_PROJECT_ID: ${{ secrets.CLAW_PROJECT_ID }}
        CLAW_SERVICE_ACCOUNT_KEY: ${{ secrets.CLAW_SERVICE_ACCOUNT_KEY }}
      run: |
        # 这里需要根据 ClawCloud 的实际 API 进行调整
        echo "🚀 Deploying to ClawCloud Run..."
        echo "📦 Image: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}"
        echo "🏷️ Service: ${{ env.SERVICE_NAME }}"
        
        # 示例部署命令（需要根据实际情况调整）
        if command -v claw &> /dev/null; then
          echo "Using ClawCloud CLI..."
          claw run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.DOCKER_IMAGE }}:${{ github.sha }} \
            --env NODE_ENV=production \
            --env CLAW_CLOUD_RUN=true \
            --memory 512Mi \
            --cpu 0.5 \
            --port 3000
        else
          echo "ClawCloud CLI not found. Please configure deployment manually."
          echo "Deployment configuration saved to clawcloud.yml"
        fi

    - name: Verify deployment
      env:
        CLAW_SERVICE_URL: ${{ secrets.CLAW_SERVICE_URL }}
      run: |
        echo "🔍 Verifying deployment..."

        # 等待部署完成
        sleep 30

        # 尝试获取服务 URL（需要根据实际情况调整）
        if [ -n "${CLAW_SERVICE_URL}" ]; then
          SERVICE_URL="${CLAW_SERVICE_URL}"
        else
          SERVICE_URL="https://${{ env.SERVICE_NAME }}.clawcloud.run"
        fi
        
        echo "🌐 Testing service at: $SERVICE_URL"
        
        # 健康检查
        if curl -f "$SERVICE_URL/api/health" --max-time 30; then
          echo "✅ Health check passed"
        else
          echo "❌ Health check failed"
          exit 1
        fi
        
        # 存储测试
        if curl -f "$SERVICE_URL/api/storage?key=test&userId=test" --max-time 30; then
          echo "✅ Storage API accessible"
        else
          echo "⚠️ Storage API test failed (may be expected)"
        fi

  notify:
    needs: [test, build, deploy-clawcloud]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.deploy-clawcloud.result }}" == "success" ]; then
          echo "✅ Deployment successful!"
          echo "🌐 Service: ${{ env.SERVICE_NAME }}"
          echo "📦 Image: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}"
        else
          echo "❌ Deployment failed!"
          echo "Please check the logs for details."
        fi

